import 'dart:convert';import 'package:flutter_curiosity/scan/ScanBarType.dart';import 'package:flutter_curiosity/scan/ScanPoint.dart';import 'package:flutter_curiosity/utils/LogUtils.dart';/// scan resultclass ScanResult {  /// barcode type  final ScanBarType type;  ///barcode message  final String message;  ///barcode points  final List<ScanPoint> points;  const ScanResult({this.type, this.message, this.points});  factory ScanResult.formMap(Map map) {    return map == null        ? null        : ScanResult(            type: map['type'] != null ? ScanBarType.values[map['type'] as int] : null,            message: map['message'] as String,            points: map['points'] != null                ? (map['points'] as List)                    .map(                      (data) => ScanPoint(                        data['X'],                        data['Y'],                      ),                    )                    .toList()                : null,          );  }  @override  String toString() {    return 'ScanResult{type: $type, message: $message, points: $points}';  }  @override  bool operator ==(Object other) =>      identical(this, other) ||      other is ScanResult &&          runtimeType == other.runtimeType &&          type == other.type &&          message == other.message &&          points == other.points;  @override  int get hashCode => type.hashCode ^ message.hashCode ^ points.hashCode;}