import 'package:flutter_curiosity/constant/Enum.dart';/// scan resultclass ScanResult {  /// barcode type  final ScanBarType type;  ///barcode code  final String code;  ///barcode points  final List<ScanPoint> points;  const ScanResult({this.type, this.code, this.points});  factory ScanResult.formMap(Map map) {    return map == null        ? null        : ScanResult(      type: map['type'] != null ? ScanBarType.values[map['type'] as int] : null,      code: map['code'] as String,      points: map['points'] != null          ? (map['points'] as List)          .map(            (data) =>            ScanPoint(              data['X'],              data['Y'],            ),      )          .toList()          : null,    );  }  @override  String toString() {    return 'ScanResult{type: $type, code: $code, points: $points}';  }  @override  bool operator ==(Object other) =>      identical(this, other) ||          other is ScanResult &&              runtimeType == other.runtimeType &&              type == other.type &&              code == other.code &&              points == other.points;  @override  int get hashCode => type.hashCode ^ code.hashCode ^ points.hashCode;}/// barcode pointclass ScanPoint {  /// barcode point x  final double x;  /// barcode point y  final double y;  ScanPoint(this.x, this.y);  @override  String toString() {    return 'ScanPoint{x: $x, y: $y}';  }  @override  bool operator ==(Object other) =>      identical(this, other) ||          other is ScanPoint &&              runtimeType == other.runtimeType &&              x == other.x &&              y == other.y;  @override  int get hashCode => x.hashCode ^ y.hashCode;}