import 'package:flutter_curiosity/scan/CameraScansBarType.dart';import 'package:flutter_curiosity/scan/CameraScansPoint.dart';/// scan resultclass CameraScansResult {  /// barcode type  final CameraScansBarType type;  ///barcode message  final String message;  ///barcode points  final List<CameraScansPoint> points;  const CameraScansResult({this.type, this.message, this.points});  factory CameraScansResult.formMap(Map map) {    return map == null        ? null        : CameraScansResult(      type: map['type'] != null          ? CameraScansBarType.values[map['type'] as int]          : null,      message: map['message'] as String,      points: map['points'] != null          ? (map['points'] as List)          .map(            (data) =>            CameraScansPoint(              data['X'],              data['Y'],            ),      )          .toList()          : null,    );  }  @override  String toString() {    return 'CameraScansResult{type: $type, message: $message, points: $points}';  }  @override  bool operator ==(Object other) =>      identical(this, other) ||          other is CameraScansResult &&              runtimeType == other.runtimeType &&              type == other.type &&              message == other.message &&              points == other.points;  @override  int get hashCode =>      type.hashCode ^ message.hashCode ^ points.hashCode;}