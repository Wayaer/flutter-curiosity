import 'dart:io';import 'dart:ui';import 'package:flutter/material.dart';class InternalTools {  ///size → Size 设备尺寸信息，如屏幕的大小，单位 pixels  static Size getSize() {    return MediaQueryData.fromWindow(window).size;  }  ///devicePixelRatio → double 单位逻辑像素的设备像素数量，即设备像素比。这个数字可能不是2的幂，实际上它甚至也可能不是整数。例如，Nexus 6的设备像素比为3.5。  static double getDevicePixelRatio() {    return MediaQueryData.fromWindow(window).devicePixelRatio;  }  static void supportPlatform() {    if (!(isAndroid() || isIOS())) {      LogTools.log('Curiosity is not support ${Platform.operatingSystem}');      return;    }  }  static bool isAndroid() {    return Platform.isAndroid;  }  static bool isIOS() {    return Platform.isIOS;  }}log(message) {  LogTools.d(message);}class LogTools {  static var separator = "=";  static var split =      "$separator$separator$separator$separator$separator$separator$separator$separator$separator";  static var title = "Yl-Log";  static var isDebug = true;  static int limitLength = 800;  static String startLine = "$split$title$split";  static String endLine = "$split$separator$separator$separator$split";  static void init({String title, bool isDebug, int limitLength}) {    title = title;    isDebug = isDebug;    limitLength = limitLength ??= limitLength;    startLine = "$split$title$split";    var endLineStr = StringBuffer();    var cnCharReg = RegExp("[\u4e00-\u9fa5]");    for (int i = 0; i < startLine.length; i++) {      if (cnCharReg.stringMatch(startLine[i]) != null) {        endLineStr.write(separator);      }      endLineStr.write(separator);    }    endLine = endLineStr.toString();  }  ///仅Debug模式可见  static void d(dynamic obj) {    if (isDebug) {      log(obj.toString());    }  }  static void v(dynamic obj) {    log(obj.toString());  }  static void log(String msg) {    if (msg.length < limitLength) {      print(msg);    } else {      segmentationLog(msg);    }  }  static void segmentationLog(String msg) {    var outStr = StringBuffer();    for (var index = 0; index < msg.length; index++) {      outStr.write(msg[index]);      if (index % limitLength == 0 && index != 0) {        print(outStr);        outStr.clear();        var lastIndex = index + 1;        if (msg.length - lastIndex < limitLength) {          var remainderStr = msg.substring(lastIndex, msg.length);          print(remainderStr);          break;        }      }    }  }}