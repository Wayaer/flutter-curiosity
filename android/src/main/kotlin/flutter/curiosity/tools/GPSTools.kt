package flutter.curiosity.toolsimport android.app.PendingIntentimport android.content.Contextimport android.content.Intentimport android.location.LocationManagerimport android.net.Uriimport android.provider.Settingsimport flutter.curiosity.CuriosityPlugin.Companion.activityimport flutter.curiosity.CuriosityPlugin.Companion.contextobject GPSTools {    /**     * 跳转到设置页面让用户自己手动开启     */    fun jumpSetting() {        val isOpen: Boolean = getStatus() //判断GPS是否打开        if (!isOpen) {            val locationIntent = Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS)            activity.startActivity(locationIntent)        }    }    /**     * 判断GPS是否开启，GPS或者AGPS开启一个就认为是开启的     * @return true 表示开启     */    fun getStatus(): Boolean {        val locationManager: LocationManager = context.getSystemService(Context.LOCATION_SERVICE) as LocationManager        // 通过GPS卫星定位，定位级别可以精确到街（通过24颗卫星定位，在室外和空旷的地方定位准确、速度快）        val gps: Boolean = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)        // 通过WLAN或移动网络(3G/2G)确定的位置（也称作AGPS，辅助GPS定位。主要用于在室内或遮盖物（建筑群或茂密的深林等）密集的地方定位）        val network: Boolean = locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)        return gps || network    }    /**     * 强制帮用户打开GPS     * 无效     */    fun open() {        val intent = Intent()        intent.setClassName("com.android.settings",                "com.android.settings.widget.SettingsAppWidgetProvider")        intent.addCategory("android.intent.category.ALTERNATIVE")        intent.data = Uri.parse("custom:3")        try {            PendingIntent.getBroadcast(context, 0, intent, 0).send()        } catch (e: PendingIntent.CanceledException) {            e.printStackTrace()        }    }}